{
  "compilerOptions": {
    "outDir": "./dist/",
    "noImplicitAny": false,
    // Подсвечивает все места где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any.
    // Это означает лишь, что в подобных ситуация разработчик должен явно писать any,
    "module": "ES2020",
    "target": "es5",
    // В какую спецификацию компилируем: для поддержки большинства браузеров
    "jsx": "react-jsx",
    "allowJs": true,
    "strict": true,
    // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
    "moduleResolution": "node",
    // Для абсолютного импорта
    "isolatedModules": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },
    //    "types": [ "node" ],
    //    "typeRoots": [ "../node_modules/@types" ],
    "esModuleInterop": true,
    //? esModuleInterop - позваляет работать пакетами, которые использеют
    //? common js как с обычными пакетами с помощью import (require() module.export) = common js
    // import Moment from 'moment';
    // без флага esModuleInterop результат undefined
    // console.log(Moment);
    // c флагом результат [object Object]
    // console.log(Moment);
    "allowSyntheticDefaultImports": true
    // Если какая-либо библиотека не имеет default import,
    // лоадеры вроде ts-loader или babel-loader автоматически создают их
    // вместо такого импорта
    // import * as React from 'react';
    // можно писать такой
    // import React from 'react';
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
      // "paths": {
      //   "src/*": [ "app/src/*" ]
      // }
    }
  },
  "include": ["./config/jest/setupTest.ts", "./src/**/*.ts", "./src/**/*.tsx"]
}
